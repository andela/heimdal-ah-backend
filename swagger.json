{
  "swagger": "2.0",
  "info": {
    "description": "API docs for Author's Haven; a destination to share and discover new, inspiring content.  ",
    "version": "v1",
    "title": "Author's Haven",
    "contact": {
      "email": "heimdal42@gmail.com"
    }
  },
  "host": "heimdal-ah-staging.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Comment",
      "description": "Users should be able to comment on articles"
    },
    {
      "name": "Replies",
      "description": "All Replies route"
    },
    {
      "name": "ReaderStats",
      "description": "User reading statistics"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{articleId}/comments": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Create a comment on an article",
        "description": "This endpoint allow users to create a comments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "description": "Enter article ID in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "You must provide the comment context which must not be more than 1500 characters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Comment has been successfully created",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "404": {
            "description": "Please enter the comment content"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/{articleId/comments": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "get an article comments",
        "description": "This endpoint get all comments on an article",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All Comment for the Article",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "404": {
            "description": "No comment exist"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/:articleId/comments/:commentId": {
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Delete a specific comments",
        "description": "This endpoint archives a specific comment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "404": {
            "description": "No comment exist"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/:commentId/reply": {
      "get": {
        "tags": [
          "Replies"
        ],
        "summary": "get a comment replies",
        "description": "This endpoint get all comments replies",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All replies for the comment",
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          },
          "404": {
            "description": "No comment exist"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/{commentId}/reply": {
      "post": {
        "tags": [
          "Replies"
        ],
        "summary": "Create a reply to a comment",
        "description": "This endpoint allow users to reply to a comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "description": "Enter comment ID in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "You must provide the comment context which must not be more than 1500 characters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Reply has been successfully created",
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          },
          "404": {
            "description": "Please enter the reply content"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/:commentId/reply/:replyId": {
      "put": {
        "tags": [
          "Replies"
        ],
        "summary": "Create a reply to a comment",
        "description": "This endpoint allow users to reply to a comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "You must provide the comment context which must not be more than 1500 characters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully updated the reply",
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          },
          "404": {
            "description": "Please enter the reply content"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/{commentId}/reply/{replyId}": {
      "delete": {
        "tags": [
          "Replies"
        ],
        "summary": "Delete a specific reply",
        "description": "This endpoint archives a specific reply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "description": "Enter comment ID in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "path",
            "name": "replyId",
            "description": "Enter reply ID in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "You must provide the comment context which must not be more than 1500 characters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "schema": {
              "$ref": "#/definitions/Replies"
            }
          },
          "404": {
            "description": "No Reply exist"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/readerstats": {
      "get": {
        "tags": [
          "ReaderStats"
        ],
        "summary": "get a user reading statistics",
        "description": "This endpoint gets a user reading stats",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Number of articles read",
            "schema": {
              "$ref": "#/definitions/ReaderStats"
            }
          },
          "404": {
            "description": "Statistics not found for this user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/:identifier": {
      "get": {
        "tags": [
          "ReaderStats"
        ],
        "summary": "Create statistics for a user",
        "description": "This endpoint create a reading statistics for a user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "The User must be authenticated for a stat to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReaderStats"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReaderStats"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Comments": {
      "type": "object",
      "required": [
        "content",
        "articleId",
        "userId"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "articleId": {
          "$ref": "#/definitions/Article"
        },
        "userId": {
          "$ref": "#/definitions/Profile"
        },
        "isArchived": {
          "type": "boolean",
          "default": "false"
        },
        "isPrivate": {
          "type": "boolean",
          "default": "false"
        },
        "commentId": {
          "$ref": "#/definitions/Comments"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "Replies": {
      "type": "object",
      "required": [
        "content",
        "articleId",
        "userId"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "userId": {
          "$ref": "#/definitions/Profile"
        },
        "isArchived": {
          "type": "boolean",
          "default": "false"
        },
        "commentId": {
          "$ref": "#/definitions/Comments"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "ReaderStats": {
      "type": "object",
      "required": [
        "articleId",
        "userId",
        "timeVisited"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "$ref": "#/definitions/Profile"
        },
        "timeVisited": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    }
  }
}