{
  "swagger": "2.0",
  "info": {
    "description": "API docs for Author's Haven; a destination to share and discover new, inspiring content.  ",
    "version": "v1",
    "title": "Author's Haven",
    "contact": {
      "email": "heimdal42@gmail.com"
    }
  },
  "host": "heimdal-ah-staging.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "Signup and Login Endpoints"
    },
    {
      "name": "Users",
      "description": "All user related routes"
    },
    {
      "name": "Articles",
      "description": "All user related routes"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Add a new user",
        "description": "This endpoint registers a new user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New user's signup credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSignUp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/UserSignUpResponse"
            }
          },
          "409": {
            "description": "Email or username already taken"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "logins in a user",
        "description": "This endpoint logins in a registered user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Registered user's login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully login",
            "schema": {
              "$ref": "#/definitions/UserLogInResponse"
            }
          },
          "404": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/articles/:articleId/reports": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Report an article",
        "description": "This endpoint Reports an article",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "description": "You must have a valid Authentication token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "You must have a valid Authentication token, context and reportType to report an article",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "You have succesfully reported an article",
            "schema": {
              "$ref": "#/definitions/UserLogInResponse"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{followingId}/follow": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "follows a user",
        "description": "This endpoint follows a user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "followingId",
            "description": "Enter folowing ID in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          }
        ],
        "responses": {
          "201": {
            "description": "User followed successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{followingId}/unfollow": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Unfollow a user",
        "description": "This endpoint unfollows a user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "followingId",
            "description": "Enter following ID in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          }
        ],
        "responses": {
          "201": {
            "description": "User unfollowed successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/followers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get all Followers",
        "description": "This endpoint get all followers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/getAllFollowers"
            }
          },
          "404": {
            "description": "You currently do not have any followers"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/following": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get all Followers following a user",
        "description": "This endpoint get all followers following a user",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/getAllFollowing"
            }
          },
          "404": {
            "description": "You currently have no followers following you"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/profiles/:username": {
      "put": {
        "tags": [
          "Update profiles"
        ],
        "summary": "Update a new users profile",
        "description": "This endpoint updates a profile for a new user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "description": "Valid auth token required",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "username",
            "description": "Enter username in params",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New user's profile credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users profile updated successfully",
            "schema": {
              "$ref": "#/definitions/UpdatedProfileResponse"
            }
          },
          "401": {
            "description": "You cannot edit another persons profile"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Get profiles"
        ],
        "summary": "View users profile",
        "description": "This endpoint helps to view users profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "Enter username in params",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users profile returned succesfully",
            "schema": {
              "$ref": "#/definitions/ViewProfileResponse"
            }
          },
          "404": {
            "description": "Users profile not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/ratings/articles/:articleId": {
      "post": {
        "tags": [
          "Rate articles"
        ],
        "summary": "Rate an article",
        "description": "This endpoint helps users rate articles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "description": "Valid auth token required",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "articleId",
            "description": "Enter articleId in params",
            "required": true,
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Articles rating by stars",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RatingsBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Users ratings on this article recorded succesfully",
            "schema": {
              "$ref": "#/definitions/ArticleRatingsResponse"
            }
          },
          "400": {
            "description": "You did not provide any token, please enter token, then retry"
          },
          "401": {
            "description": "User token not authenticated, wrong token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/articles_search/author": {
      "get": {
        "tags": [
          "Search articles by author"
        ],
        "summary": "Search and filter articles by author",
        "description": "This endpoint helps users search and filters articles by author",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "author",
            "description": "Enter author in query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All Articles returned succesfully",
            "schema": {
              "$ref": "#/definitions/ArticlesByAuthorResponse"
            }
          },
          "404": {
            "description": "No such author"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/articles_search/title": {
      "get": {
        "tags": [
          "Search articles by title"
        ],
        "summary": "Search and filter articles by title",
        "description": "This endpoint helps users search and filters articles by title",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "description": "Enter title in query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Articles with this title returned succesfully",
            "schema": {
              "$ref": "#/definitions/ArticlesByTitleResponse"
            }
          },
          "404": {
            "description": "No Articles with such title"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/articles_search/tag": {
      "get": {
        "tags": [
          "Search articles by tag"
        ],
        "summary": "Search and filter articles by tag",
        "description": "This endpoint helps users search and filters articles by tag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "description": "Enter tag in query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All Articles using these tags returned succesfully",
            "schema": {
              "$ref": "#/definitions/ArticlesByTagResponse"
            }
          },
          "404": {
            "description": "No Articles with such tags"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "UserSignUp": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserSignUpResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "user created succesfully"
        },
        "token": {
          "type": "string"
        },
        "emailToken": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserLogInResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "user logged in successfully'"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Report": {
      "type": "object",
      "required": [
        "context",
        "reportType"
      ],
      "enum": [
        "spam",
        "plagarism",
        "others"
      ],
      "properties": {
        "context": {
          "type": "string"
        },
        "reportType": {
          "type": "string"
        }
      }
    },
    "getAllFollowers": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "followerId": {
                "type": "integer",
                "format": "int64"
              },
              "followingId": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "follow": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "biodata": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "twitterUsername": {
                    "type": "string"
                  },
                  "facebookUsername": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "userId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllFollowing": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "followerId": {
                "type": "integer",
                "format": "int64"
              },
              "followingId": {
                "type": "integer",
                "format": "int64"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "follow": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "biodata": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "twitterUsername": {
                    "type": "string"
                  },
                  "facebookUsername": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "userId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ProfileBody": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "biodata": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "twitterUsername": {
          "type": "string"
        },
        "facebookUsername": {
          "type": "string"
        }
      }
    },
    "ViewProfileResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Users profile returned succesfully"
        },
        "profile": {
          "type": "object"
        }
      }
    },
    "UpdatedProfileResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Users profile updated successfully"
        },
        "profile": {
          "type": "object",
          "example": {
            "firstName": "Victor",
            "lastName": "Obije",
            "biodata": "I love design",
            "image": "mycoolimage",
            "location": "Lagos",
            "twitterUsername": "akpante",
            "facebookUsername": "akpante"
          }
        }
      }
    },
    "RatingsBody": {
      "type": "object",
      "properties": {
        "stars": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "ArticleRatingsResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Users ratings on this article recorded succesfully"
        },
        "ratings": {
          "type": "object",
          "example": {
            "id": 1,
            "userId": 2,
            "articleId": 1,
            "stars": 4,
            "updatedAt": "2019-01-06T04:24:45.375Z",
            "createdAt": "2019-01-06T04:24:45.375Z"
          }
        }
      }
    },
    "ArticlesByAuthorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "All Articles returned succesfully"
        },
        "articles": {
          "type": "object",
          "example": {
            "count": 1,
            "rows": [
              {
                "id": 3,
                "slug": "this-is-third-post-title-u87ddsa",
                "title": "This is the third post title",
                "description": "Third descriptive title",
                "image": null,
                "isArchived": false,
                "body": "Content from article creation",
                "isPublished": false,
                "readingTime": null,
                "createdAt": "2019-01-06T23:19:49.361Z",
                "updatedAt": "2019-01-06T23:19:49.361Z",
                "user": {
                  "id": 3,
                  "profile": {
                    "username": "john"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "ArticlesByTitleResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Articles with this title returned succesfully"
        },
        "articles": {
          "type": "object",
          "example": {
            "count": 4,
            "rows": [
              {
                "id": 2,
                "slug": "this-is-the-second-post-title-mbjb7y",
                "userId": 2,
                "title": "This is the second post title",
                "description": "Second descriptive title",
                "image": null,
                "isArchived": false,
                "body": "Content from article creation",
                "isPublished": false,
                "readingTime": null,
                "createdAt": "2019-01-06T23:19:49.361Z",
                "updatedAt": "2019-01-06T23:19:49.361Z"
              },
              {
                "id": 3,
                "slug": "this-is-third-post-title-u87ddsa",
                "userId": 3,
                "title": "This is the third post title",
                "description": "Third descriptive title",
                "image": null,
                "isArchived": false,
                "body": "Content from article creation",
                "isPublished": false,
                "readingTime": null,
                "createdAt": "2019-01-06T23:19:49.361Z",
                "updatedAt": "2019-01-06T23:19:49.361Z"
              },
              {
                "id": 4,
                "slug": "this-is-third-pot-title-u87dda",
                "userId": 4,
                "title": "This is the third post title",
                "description": "Third descriptive title",
                "image": null,
                "isArchived": false,
                "body": "Content from article creation",
                "isPublished": false,
                "readingTime": null,
                "createdAt": "2019-01-06T23:19:49.361Z",
                "updatedAt": "2019-01-06T23:19:49.361Z"
              },
              {
                "id": 5,
                "slug": "this-is-trd-post-title-u87ddsa",
                "userId": 5,
                "title": "This is the thir post title",
                "description": "Third descriptive title",
                "image": null,
                "isArchived": false,
                "body": "Content from article creation",
                "isPublished": false,
                "readingTime": null,
                "createdAt": "2019-01-06T23:19:49.361Z",
                "updatedAt": "2019-01-06T23:19:49.361Z"
              }
            ]
          }
        }
      }
    },
    "ArticlesByTagResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "All Articles using these tags returned succesfully"
        },
        "articles": {
          "type": "object",
          "example": {
            "count": 1,
            "rows": [
              {
                "article": {
                  "id": 4,
                  "slug": "this-is-third-pot-title-u87dda",
                  "userId": 4,
                  "title": "This is the third post title",
                  "description": "Third descriptive title",
                  "image": null,
                  "isArchived": false,
                  "body": "Content from article creation",
                  "isPublished": false,
                  "readingTime": null,
                  "createdAt": "2019-01-06T23:19:49.361Z",
                  "updatedAt": "2019-01-06T23:19:49.361Z"
                },
                "tag": {
                  "id": 2,
                  "tagName": "react",
                  "createdAt": "2019-01-06T23:19:49.811Z",
                  "updatedAt": "2019-01-06T23:19:49.811Z"
                }
              }
            ]
          }
        }
      }
    }
  }
}